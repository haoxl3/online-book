{"version":3,"sources":["logo.svg","utility.js","components/PriceList.js","components/ViewTab.js","components/MonthPicker.js","components/CreateBtn.js","components/TotalPrice.js","components/Loader.js","components/PieChart.js","components/Tabs.js","WithContext.js","containers/Home.js","components/CategorySelect.js","components/PriceForm.js","containers/Create.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","padLeft","n","range","size","startAt","arr","i","parseToYearAndMonth","str","date","Date","year","getFullYear","month","getMonth","isValidDate","dateString","match","d","Number","isNaN","getTime","toISOString","slice","flatternArr","reduce","map","item","id","Colors","blue","deepBlue","green","red","gray","lightGray","white","PriceList","items","onModifyItem","onDeleteItem","className","key","fontSize","style","backgroundColor","padding","color","icon","category","iconName","title","type","price","onClick","generateLinkClass","current","view","ViewTab","activeTab","onTabChange","href","event","preventDefault","MonthPicker","props","handleClick","node","contains","target","setState","isOpen","toggleDropdown","state","selectedYear","yearNumber","selectedMonth","monthNumber","onChange","document","addEventListener","this","removeEventListener","monthRange","yearRange","number","ref","display","index","React","Component","CreateBtn","e","TotalPrice","income","outcome","Loader","rotate","ColorsArr","Object","keys","CustomPieChart","categoryData","length","width","height","isAnimationActive","data","dataKey","cx","cy","outerRadius","fill","label","entry","Tabs","tabChange","activeIndex","children","Children","child","activeClassName","Tab","Fragment","withContext","AppContext","Consumer","actions","tabsText","generateChartDataByCategory","categoryMap","filter","forEach","cid","value","push","name","mapKey","Home","changeView","tabView","changeDate","selectNewMonth","modifyItem","history","createItem","deleteItem","getInitalData","categories","currentDate","isLoading","itemsWithCategory","chartOutcomeDataByCategory","chartIncomeDataByCategory","totalIncome","totalOutcome","src","logo","alt","PieChart","withRouter","CategorySelect","selectedCategory","onSelectCategory","selectedCategoryId","PriceForm","validatePass","errorMessage","sumbitForm","onFormSubmit","editMode","priceInput","trim","dateInput","titleInput","onSubmit","noValidate","htmlFor","placeholder","defaultValue","input","onCancelSubmit","role","defaultProps","Create","selectedTab","selectCategory","submibForm","isEditMode","updateItem","then","cancelSubmit","params","getEditData","editItem","filterCategories","tabIndex","findIndex","text","background","createContext","App","withLoading","cb","a","getURLWithData","Promise","all","axios","get","results","delete","promiseArr","itemAlreadyFeched","indexOf","fetchedCategories","finalCategories","finalItem","categoryId","newId","Math","random","toString","substr","parsedDate","monthCategory","timestamp","post","newItem","updatedCategoryId","updatedData","put","modifedItem","Provider","to","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9d07bff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const LIST_VIEW = 'list';\nexport const CHART_VIEW = 'chart';\nexport const TYPE_INCOME = 'income';\nexport const TYPE_OUTCOME = 'outcome';\n\nexport const padLeft = n => {\n    return n < 10 ? '0' + n : n;\n};\n\nexport const range = (size, startAt = 0) => {\n    const arr = [];\n    for (let i = 0; i < size; i++) {\n        arr[i] = startAt + i;\n    }\n    return arr;\n};\n\nexport const parseToYearAndMonth = str => {\n    const date = str ? new Date(str) : new Date();\n    return {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1\n    };\n};\nexport const isValidDate = (dateString) => {\n    const regEx = /^\\d{4}-\\d{2}-\\d{2}$/;\n    if (!dateString.match(regEx)) {\n        return false;\n    }\n    // Invalid format\n    const d = new Date(dateString);\n    if (Number.isNaN(d.getTime())) {\n        return false;\n    }\n    // Invalid date\n    return d.toISOString().slice(0, 10) === dateString;\n};\n\nexport const flatternArr = arr => {\n    return arr.reduce((map, item) => {\n        map[item.id] = item;\n        return map;\n    }, {});\n};\n\nexport const ID = () => {\n    return '_' + Math.random().toString(36).substr(2, 9);\n};\n\nexport const Colors = {\n    blue: '#347eff',\n    deepBlue: '#61dafb',\n    green: '#28a745',\n    red: '#dc3545',\n    gray: '#555',\n    lightGray: '#efefef',\n    white: '#fff'\n};","import React from 'react'\nimport Ionicon from 'react-ionicons'\nimport PropTypes from 'prop-types'\n\nconst PriceList = ({items, onModifyItem, onDeleteItem}) => {\n    return (\n        <ul className=\"list-group list-group-flush\">\n            {\n                items.map((item) => (\n                    <li\n                        className=\"list-group-item d-flex justify-content-between align-items-center\"\n                        key={item.id}\n                    >\n                            <span className=\"col-1 badge badge-primary\">\n                                <Ionicon\n                                    className=\"rounded-circle\"\n                                    fontSize=\"30px\"\n                                    style={{backgroundColor: '#007bff', padding: '5px'}}\n                                    color={'#fff'}\n                                    icon={item.category.iconName}\n                                />\n                            </span>\n                            <span className=\"col-5\">{item.title}</span>\n                            <span className=\"col-2 font-weight-bold\">\n                                {(item.category.type === 'income') ? '+' : '-'}\n                                {item.price}元\n                            </span>\n                            <span className=\"col-2\">{item.date}</span>\n                            <a\n                                className=\"col-1\"\n                                onClick={() => {onModifyItem(item)}}>\n                                    <Ionicon\n                                        className=\"rounded-circle\"\n                                        fontSize=\"30px\"\n                                        style={{backgroundColor: '#28a745', padding: '5px'}}\n                                        color={'#fff'}\n                                        icon='ios-create-outline'\n                                    />\n                            </a>\n                            <a\n                                className=\"col-1\"\n                                onClick={() => {onDeleteItem(item)}}\n                                >\n                                    <Ionicon\n                                        className=\"rounded-circle\"\n                                        fontSize=\"30px\"\n                                        style={{backgroundColor: '#dc3545', padding: '5px'}}\n                                        color={'#fff'}\n                                        icon='ios-close'\n                                    />\n                            </a>\n                    </li>\n                ))\n            }\n        </ul>\n    );\n};\nPriceList.propTypes = {\n    items: PropTypes.array.isRequired,\n    onModifyItem: PropTypes.func.isRequired,\n    onDeleteItem: PropTypes.func.isRequired\n}\nexport default PriceList\n","import React from 'react'\nimport Ionicon from 'react-ionicons'\nimport PropTypes from 'prop-types'\nimport {LIST_VIEW, CHART_VIEW} from '../utility'\n\nconst generateLinkClass = (current, view) => {\n    return current === view ? 'nav-link active' : 'nav-link';\n}\n\nconst ViewTab = ({activeTab, onTabChange}) => (\n    <ul className=\"nav nav-tabs nav-fill my-4\">\n        <li className=\"nav-item active\">\n            <a \n                className={generateLinkClass(activeTab, LIST_VIEW)}\n                href=\"#\"\n                onClick={event => {event.preventDefault();onTabChange(LIST_VIEW)}}\n            >\n                <Ionicon\n                    className=\"rounded-circle mr-2\"\n                    fontSize=\"25px\"\n                    color={'#007bff'}\n                    icon='ios-paper'\n                />\n                列表模式\n            </a>\n        </li>\n        <li className=\"nav-item\">\n            <a\n                className={generateLinkClass(activeTab, CHART_VIEW)}\n                href=\"#\"\n                onClick={event => {event.preventDefault();onTabChange(CHART_VIEW)}}\n            >\n                <Ionicon\n                    className=\"rounded-circle mr-2\"\n                    fontSize=\"25px\"\n                    color={'#007bff'}\n                    icon='ios-pie'\n                />\n                图表模式\n            </a>\n        </li>\n    </ul>\n)\nViewTab.propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    onTabChange: PropTypes.func.isRequired\n}\nexport default ViewTab","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {padLeft, range} from '../utility'\n\nclass MonthPicker extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isOpen: false,\n            selectedYear: this.props.year\n        }\n    }\n    componentDidMount() {\n        document.addEventListener('click', this.handleClick, false)\n    }\n    componentWillUnmount() {\n        document.removeEventListener('click', this.handleClick, false)\n    }\n    handleClick = (event) => {\n        // this.node出现在dom节点上\n        if (this.node.contains(event.target)) {\n            return;\n        }\n        this.setState({\n            isOpen: false\n        })\n    }\n    toggleDropdown = (event) => {\n        event.preventDefault()\n        this.setState({\n            isOpen: !this.state.isOpen,\n            selectedYear: this.props.year\n        })\n    }\n    selectedYear = (event, yearNumber) => {\n        event.preventDefault()\n        this.setState({\n            selectedYear: yearNumber\n        })\n    }\n    selectedMonth = (event, monthNumber) => {\n        event.preventDefault()\n        // 关闭日期弹框\n        this.setState({\n            isOpen: false\n        })\n        // 传出所选的年与月\n        this.props.onChange(this.state.selectedYear, monthNumber)\n    }\n    render() {\n        const {year, month} = this.props\n        const {isOpen, selectedYear} = this.state\n        const monthRange = range(12, 1)\n        const yearRange = range(9, -4).map(number => number + year)\n        return (\n            <div className=\"dropdown month-picker-component\" ref={ref => {this.node = ref}}>\n                <h4>选择月份</h4>\n                <button\n                    className=\"btn btn-lg btn-secondary dropdown-toggle\"\n                    onClick={this.toggleDropdown}\n                >\n                    {`${year}年 ${padLeft(month)}月`}\n                </button>\n                {isOpen &&\n                    <div className=\"dropdown-menu\" style={{display: 'block'}}>\n                        <div className=\"row\">\n                            <div className=\"col border-right years-range\">\n                                {yearRange.map((yearNumber, index) =>\n                                    <a\n                                        href=\"#\"\n                                        key={index} \n                                        className={yearNumber === selectedYear ? 'dropdown-item active' : 'dropdown-item'}\n                                        onClick={event => this.selectedYear(event, yearNumber)}\n                                    >\n                                        {yearNumber} 年\n                                    </a>\n                                )}\n                            </div>\n                            <div className=\"col months-range\">\n                                {monthRange.map((monthNumber, index) =>\n                                    <a\n                                        href=\"#\"\n                                        key={index}\n                                        className={monthNumber === month ? 'dropdown-item active' : 'dropdown-item'}\n                                        onClick={event => this.selectedMonth(event, monthNumber)}\n                                    >\n                                        {padLeft(monthNumber)} 月\n                                    </a>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\nMonthPicker.propTypes = {\n    year: PropTypes.number.isRequired,\n    month: PropTypes.number.isRequired,\n    onChange: PropTypes.func.isRequired\n}\nexport default MonthPicker","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Ionicon from 'react-ionicons';\n\nconst CreateBtn = ({onClick}) => (\n    <button\n        className='btn btn-primary btn-block d-flex justify-content-center align-items-center'\n        onClick={(e) => {\n            onClick();\n        }}\n    >\n        <Ionicon\n            className='rounded-circle'\n            fontSize='30px'\n            color='#fff'\n            icon='ios-add-circle'\n        />\n        创建一条新的记账记录\n    </button>\n);\n\nCreateBtn.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\nexport default CreateBtn;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nconst TotalPrice = ({income, outcome}) => (\n    <div className='row'>\n        <div className='col'>\n            <h5 className='income'>收入：<span>{income}</span></h5>\n        </div>\n        <div className='col'>\n            <h5 className='outcome'>支出：<span>{outcome}</span></h5>\n        </div>\n    </div>\n);\n\nTotalPrice.propTypes = {\n    income: PropTypes.number.isRequired,\n    outcome: PropTypes.number.isRequired\n};\nexport default TotalPrice\n","import React from 'react';\nimport Ionicon from 'react-ionicons';\n\nconst Loader = () => (\n    <div className=\"loading-component text-center\">\n        <Ionicon icon=\"ios-refresh\"\n            fontSize=\"40px\"\n            color=\"#347eff\"\n            rotate={true}\n        />\n        <h5>加载中</h5>\n    </div>\n);\n\nexport default Loader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Colors} from '../utility';\nimport {PieChart, Pie, Tooltip, Cell, ResponsiveContainer} from 'recharts';\n\nconst ColorsArr = Object.keys(Colors).map(key => Colors[key]);\n\nconst CustomPieChart = ({title, categoryData}) => {\n    if (categoryData.length === 0) {\n        return <h3 className=\"text-center mx-3\">{title}还没有任何数据</h3>\n    }\n    return (\n        <div className=\"pie-chart-component\">\n            <h3 className=\"text-center mt-3\">{title}</h3>\n            <ResponsiveContainer width={'100%'} height={300}>\n            <PieChart>\n                <Pie\n                    isAnimationActive={false}\n                    data={categoryData}\n                    dataKey=\"value\"\n                    cx={'50%'}\n                    cy={'50%'}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    label\n                >\n                    {\n                        categoryData.map((entry, index) => <Cell key={index} fill={ColorsArr[index % ColorsArr.length]}/>)\n                    }\n                </Pie>\n                <Tooltip/>\n            </PieChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\nCustomPieChart.propTypes = {\n    title: PropTypes.string,\n    categoryData: PropTypes.array\n}\nexport default CustomPieChart;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Tabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeIndex: props.activeIndex\n        };\n    }\n    tabChange = (event, index) => {\n        event.preventDefault();\n        this.setState({\n            activeIndex: index\n        });\n        this.props.onTabChange(index);\n    }\n    render() {\n        const {children} = this.props;\n        const {activeIndex} = this.state;\n        return (\n            <ul className=\"nav nav-tabs nav-fill my-4\">\n                {React.Children.map(children, (child, index) => {\n                    const activeClassName = activeIndex === index ? 'nav-link active' : 'nav-link';\n                    return (\n                        <li className=\"nav-item\">\n                            <a\n                                className={activeClassName} \n                                href=\"#\"\n                                onClick={event => {this.tabChange(event, index)}}\n                            >{child}</a>\n                        </li>\n                    )\n                })}\n            </ul>\n        )\n    }\n}\nTabs.propTypes = {\n    activeIndex: PropTypes.number.isRequired,\n    onTabChange: PropTypes.func.isRequired\n}\nexport const Tab = ({children}) => \n<React.Fragment>{children}</React.Fragment>","import React from 'react';\nimport {AppContext} from './App';\n\nconst withContext = (Component) => {\n    return (props) => (\n        <AppContext.Consumer>\n            {({state, actions}) => {\n                return <Component {...props} data={state} actions={actions}/>\n            }}\n        </AppContext.Consumer>\n    );\n};\n\nexport default withContext;","import React from 'react';\nimport logo from '../logo.svg';\nimport Ionicon from 'react-ionicons';\nimport {withRouter} from 'react-router-dom';\nimport {LIST_VIEW, CHART_VIEW, TYPE_INCOME, TYPE_OUTCOME} from '../utility';\nimport PriceList from '../components/PriceList';\nimport ViewTab from '../components/ViewTab';\nimport MonthPicker from '../components/MonthPicker';\nimport CreateBtn from '../components/CreateBtn';\nimport TotalPrice from '../components/TotalPrice';\nimport Loader from '../components/Loader';\nimport PieChart from '../components/PieChart';\nimport {Tabs, Tab} from '../components/Tabs';\nimport withContext from '../WithContext';\n\nexport const categories = {\n    '1': {\n        id: '1',\n        name: '旅行',\n        type: 'outcome',\n        iconName: 'ios-plane'\n    },\n    '2': {\n        id: '2',\n        name: 'ad旅行',\n        type: 'outcome',\n        iconName: 'ios-plane'\n    }\n}\nexport const items = [\n    {\n        id: 1,\n        title: '去旅游',\n        price: 2000,\n        date: '2020-10-16',\n        cid: '1'\n    },\n    {\n        id: 2,\n        title: '去国外旅游',\n        price: 2000,\n        date: '2020-03-26',\n        cid: '2'\n    },\n    {\n        id: 3,\n        title: '去旅游',\n        price: 2000,\n        date: '2020-10-19',\n        cid: '1'\n    }\n];\n\nconst tabsText = [LIST_VIEW, CHART_VIEW];\n\nconst generateChartDataByCategory = (items, type = TYPE_INCOME) => {\n    let categoryMap = {};\n    items.filter(item => item.category.type === type).forEach(item => {\n        if (categoryMap[item.cid]) {\n            categoryMap[item.cid].value += item.price * 1;\n            categoryMap[item.cid].items.push(item.id);\n        } else {\n            categoryMap[item.cid] = {\n                name: item.category.name,\n                value: item.price * 1,\n                items: [item.id]\n            }\n        }\n    });\n    return Object.keys(categoryMap).map(mapKey => {\n        return {...categoryMap[mapKey]};\n    });\n}\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tabView: tabsText[0]\n        }\n    }\n    componentDidMount() {\n        this.props.actions.getInitalData();\n    }\n    changeView = (index) => {\n        this.setState({\n            tabView: tabsText[index]\n        });\n    }\n    changeDate = (year, month) => {\n        // 调用父组件的更新日期方法\n        this.props.actions.selectNewMonth(year, month);\n    }\n    modifyItem = (item) => {\n        // const modifiedItems = this.state.items.map(item => {\n        //     if (item.id === modifiedItem.id) {\n        //         return {...item, title: '更新后的标题'};\n        //     } else {\n        //         return item;\n        //     }\n        // });\n        // this.setState({\n        //     items: modifiedItems\n        // });\n        this.props.history.push(`/edit/${item.id}`);\n    }\n    createItem = () => {\n        // this.setState({\n        //     items: [newItem, ...this.state.items]\n        // });\n        // 使用路由withRouter后props便自带了history\n        this.props.history.push('/create');\n    }\n    deleteItem = (item) => {\n        // const filteredItems = this.state.items.filter(item => item.id !== deletedItem.id);\n        // this.setState({\n        //     items: filteredItems\n        // });\n        // 调用context中actions传来的deleteItem方法，即最初从App传来的\n        this.props.actions.deleteItem(item);\n    }\n    render() {\n        const {data} = this.props;\n        const {items, categories, currentDate, isLoading} = data;\n        const {tabView} = this.state;\n        // 将categories与items.cid关联,给item添加category属性并赋值\n        const itemsWithCategory = Object.keys(items).map(id => {\n            items[id].category = categories[items[id].cid];\n            return items[id];\n        });\n        const chartOutcomeDataByCategory = generateChartDataByCategory(itemsWithCategory, TYPE_OUTCOME);\n        const chartIncomeDataByCategory = generateChartDataByCategory(itemsWithCategory, TYPE_INCOME);\n        let totalIncome = 0;\n        let totalOutcome = 0;\n        itemsWithCategory.forEach(item => {\n            if (item.category.type === TYPE_OUTCOME) {\n                totalOutcome += item.price;\n            } else {\n                totalIncome += item.price;\n            }\n        })\n        return (\n            <React.Fragment>\n                <header className='App-header'>\n                    <div className=\"row mb-5\">\n                        <img src={logo} className='App-logo' alt='logo'/>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <MonthPicker\n                                year={currentDate.year}\n                                month={currentDate.month}\n                                onChange={this.changeDate}\n                            />\n                        </div>\n                        <div className=\"col\">\n                            <TotalPrice\n                                income={totalIncome}\n                                outcome={totalOutcome}\n                            />\n                        </div>\n                    </div>\n                </header>\n                <div className=\"content-area py-3 px-3\">\n                    {isLoading && <Loader/>}\n                    {!isLoading &&\n                        <React.Fragment>\n                            <Tabs activeIndex={0} onTabChange={this.changeView}>\n                                <Tab>\n                                    <Ionicon\n                                        className=\"rounded-circle mr-2\"\n                                        fontSize=\"25px\"\n                                        color={'#007bff'}\n                                        icon='ios-paper'\n                                    />\n                                    列表模式\n                                </Tab>\n                                <Tab>\n                                    <Ionicon\n                                        className=\"rounded-circle mr-2\"\n                                        fontSize=\"25px\"\n                                        color={'#007bff'}\n                                        icon='ios-pie'\n                                    />\n                                    图表模式\n                                </Tab>\n                            </Tabs>\n                            <ViewTab activeTab={tabView} onTabChange={this.changeView}/>\n                            <CreateBtn onClick={this.createItem}/>\n                            {tabView === LIST_VIEW &&\n                                <PriceList\n                                    items={itemsWithCategory}\n                                    onModifyItem={this.modifyItem}\n                                    onDeleteItem={this.deleteItem}\n                                />\n                            }\n                            {tabView === CHART_VIEW &&\n                                <React.Fragment>\n                                    <PieChart title=\"本月支出\" categoryData={chartOutcomeDataByCategory}/>\n                                    <PieChart title=\"本月收入\" categoryData={chartIncomeDataByCategory}/>\n                                </React.Fragment>\n                            }\n                        </React.Fragment>\n                    }\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default withRouter(withContext(Home));","import React from 'react'\nimport Ionicon from 'react-ionicons'\nimport PropTypes from 'prop-types'\n\nclass CategorySelect extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    selectedCategory = (event, category) => {\n        this.props.onSelectCategory(category)\n        event.preventDefault()\n    }\n    render() {\n        const {categories, selectedCategory} = this.props;\n        const selectedCategoryId = selectedCategory && selectedCategory.id;\n        return (\n            <div className=\"category-select-component\">\n                <div className=\"row\">\n                    {\n                        categories.map((category, index) => {\n                            const activeClassName = (selectedCategoryId === category.id) ? 'category-item col-3 active' : 'category-item col-3'\n                            return (\n                                <div className={activeClassName} key={index}\n                                onClick={event => {this.selectedCategory(event, category)}}>\n                                    <Ionicon\n                                        className=\"rounded-circle\"\n                                        fontSize=\"50px\"\n                                        color=\"#555\"\n                                        icon={category.iconName}\n                                    />\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default CategorySelect","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {isValidDate} from '../utility';\n\nclass PriceForm extends React.Component {\n    static propTypes = {\n        onFormSubmit: PropTypes.func.isRequired,\n        onCancelSubmit: PropTypes.func.isRequired,\n        item: PropTypes.object\n    }\n    static defaultProps = {\n        item: {}\n    }\n    state = {\n        validatePass: true,\n        errorMessage: ''\n    }\n    sumbitForm = (event) => {\n        const {item, onFormSubmit} = this.props;\n        const editMode = !!item.id;\n        const price = this.priceInput.value.trim() * 1;\n        const date = this.dateInput.value.trim();\n        const title = this.titleInput.value.trim();\n        if (price && date && title) {\n            if (price < 0) {\n                this.setState({\n                    validatePass: false,\n                    errorMessage: '价格数字必须大于0'\n                });\n            }\n            else if (!isValidDate(date)) {\n                this.setState({\n                    validatePass: false,\n                    errorMessage: '请填写正确的日期格式'\n                });\n            }\n            else {\n                this.setState({\n                    validatePass: true,\n                    errorMessage: ''\n                });\n                if (editMode) {\n                    onFormSubmit({...item, title, price, date}, editMode);\n                }\n                else {\n                    onFormSubmit({title, price, date}, editMode);\n                }\n            }\n        }\n        else {\n            this.setState({\n                validatePass: false,\n                errorMessage: '请输入所有必选项'\n            });\n        }\n        event.preventDefault();\n    }\n    render() {\n        const {\n            title,\n            price,\n            date\n        } = this.props.item;\n        return (\n            <form onSubmit={(event) => {\n                this.sumbitForm(event);\n            }} noValidate>\n        <div className='form-group'>\n          <label htmlFor='title'>标题 *</label>\n          <input\n            type='text' className='form-control'\n            id='title' placeholder='请输入标题'\n            defaultValue={title}\n            ref={(input) => {\n                this.titleInput = input;\n            }}\n            />\n        </div>\n        <div className='form-group'>\n          <label htmlFor='price'>价格 *</label>\n          <div className='input-group'>\n            <div className='input-group-prepend'>\n              <span className='input-group-text'>¥</span>\n            </div>\n            <input\n            type='number'\n            className='form-control'\n            defaultValue={price}\n            id='price' placeholder='请输入价格'\n            ref={(input) => {\n                this.priceInput = input;\n            }}\n            />\n          </div>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='date'>日期 *</label>\n          <input\n            type='date' className='form-control'\n            id='date' placeholder='请输入日期'\n            defaultValue={date}\n            ref={(input) => {\n                this.dateInput = input;\n            }}\n            />\n        </div>\n        <button type='submit' className='btn btn-primary mr-3'>提交</button>\n        <button className='btn btn-secondary' onClick={this.props.onCancelSubmit}> 取消 </button>\n        {!this.state.validatePass &&\n            <div className='alert alert-danger mt-5' role='alert'>\n            {this.state.errorMessage}\n          </div>\n            }\n      </form>\n            );\n    }\n}\n\nexport default PriceForm\n","import React from 'react';\nimport CategorySelect from '../components/CategorySelect';\nimport {withRouter} from 'react-router-dom';\nimport {Tabs, Tab} from '../components/Tabs';\nimport PriceForm from '../components/PriceForm';\nimport {testCategories} from '../testData';\nimport {TYPE_INCOME, TYPE_OUTCOME, LIST_VIEW, CHART_VIEW} from '../utility';\nimport PriceList from '../components/PriceList';\nimport {AppContext} from '../App';\nimport withContext from '../WithContext';\n\n// match获取路由上的参数\n// const Create = ({match}) => {\n//     return <h1>create page {match.params.id}</h1>\n// }\n\nconst tabsText = [LIST_VIEW, CHART_VIEW];\nexport class Create extends React.Component {\n    constructor(props) {\n        super(props);\n        const {id} = props.match.params;\n        const {categories, items} = props.data;\n        this.state = {\n            selectedTab: (id && items[id]) ? categories[items[id].cid].type : TYPE_OUTCOME,\n            selectedCategory: (id && items[id]) ? categories[items[id].cid] : null\n        }\n    }\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.actions.getEditData(id).then(data => {\n            const {editItem, categories} = data;\n            // 因为constructor优先componentDidMount执行，导致items无值，故在更新后再执行一下,使分类高亮\n            this.setState({\n                selectedTab: (id && editItem) ? categories[editItem.cid].type : TYPE_OUTCOME,\n                selectedCategory: (id && editItem) ? categories[editItem.cid] : null\n            })\n        });\n    }\n    tabChange = (index) => {\n        this.setState({\n            selectedTab: tabsText[index]\n        });\n    }\n    selectCategory = (category) => {\n        // 记录所选择的支出分类，如旅行、吃饭等\n        this.setState({\n            selectedCategory: category\n        });\n    }\n    submibForm = (data, isEditMode) => {\n        if (!isEditMode) {\n            // create\n            this.props.actions.createItem(data, this.state.selectedCategory.id).then(() => {\n                this.props.history.push('/');\n            });\n        } else {\n            // update\n            this.props.actions.updateItem(data, this.state.selectedCategory.id).then(() => {\n                this.props.history.push('/');\n            });\n        }\n    }\n    cancelSubmit = () => {\n        this.props.history.push('/');\n    }\n    render() {\n        const {data} = this.props;\n        const {items, categories} = data;\n        const {id} = this.props.match.params;\n        const editItem = (id && items[id]) ? items[id] : {};\n        const {selectedTab, selectedCategory} = this.state;\n        const filterCategories = Object.keys(categories)\n        .filter(id => categories[id].type === selectedTab)\n        .map(id => categories[id]);\n        const tabIndex = tabsText.findIndex(text => text === selectedTab);\n        return (\n            <div className=\"create-page py-3 px-3 rounded mt-3\" style={{background: '#fff'}}>\n                <Tabs activeIndex={tabIndex} onTabChange={this.tabChange}>\n                    <Tab>支出</Tab>\n                    <Tab>收入</Tab>\n                </Tabs>\n                <CategorySelect\n                    categories={filterCategories}\n                    onSelectCategory={this.selectCategory}\n                    selectedCategory={selectedCategory}/>\n                <PriceForm\n                    onFormSubmit={this.submibForm}\n                    onCancelSubmit={this.cancelSubmit}\n                    item={editItem}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(withContext(Create));","import React from 'react';\nimport axios from 'axios';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport Home from './containers/Home';\nimport Create from './containers/Create';\nimport {flatternArr, ID, parseToYearAndMonth} from './utility';\n\nexport const AppContext = React.createContext();\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: {},\n            categories: {},\n            isLoading: false,\n            currentDate: parseToYearAndMonth()\n        };\n        // 异步方法时loading先为True，请求成功再为false，但在每个方法里都这样写比较\n        // 繁琐，故写一个共用方法被调用即可\n        const withLoading = cb => {\n            // 获取回调函数的参数ES6...args\n            return (...args) => {\n                this.setState({\n                    isLoading: true\n                });\n                return cb(...args);\n            };\n        };\n        // 创建全局变量actions,然后自顶向下传deleteItem事件\n        this.actions = {\n            // getInitalData: () => {\n            //     this.setState({\n            //         isLoading: true\n            //     });\n            //     const {currentDate} = this.state;\n            //     const getURLWithData = `/items?monthCategory=${currentDate.year}-${currentDate.month}&_sort=timestamp&_order=desc`;\n            //     const promiseArr = [axios.get('/categories'), axios.get(getURLWithData)];\n            //     Promise.all(promiseArr).then(arr => {\n            //         const [categories, items] = arr;\n            //         this.setState({\n            //             items: flatternArr(items.data),\n            //             categories: flatternArr(categories.data),\n            //             isLoading: false\n            //         });\n            //     });\n            // },\n            // 将上面的方法改成async await\n            getInitalData: withLoading(async () => {\n                this.setState({\n                    isLoading: true\n                });\n                const {currentDate} = this.state;\n                const getURLWithData = `/items?monthCategory=${currentDate.year}-${currentDate.month}&_sort=timestamp&_order=desc`;\n                const results = await Promise.all([axios.get('/categories'), axios.get(getURLWithData)]);\n                const [categories, items] = results;\n                this.setState({\n                    items: flatternArr(items.data),\n                    categories: flatternArr(categories.data),\n                    isLoading: false\n                });\n            }),\n            // selectNewMonth: (year, month) => {\n            //     // 根据选择的日期，请求相应日期的数据，并更新日期选择框与展示的结果\n            //     const getURLWithData = `/items?monthCategory=${year}-${month}&_sort=timestamp&_order=desc`;\n            //     axios.get(getURLWithData).then(items => {\n            //         this.setState({\n            //             items: flatternArr(items.data),\n            //             currentDate: {year, month}\n            //         });\n            //     });\n            // },\n            // async版\n            selectNewMonth: withLoading(async (year, month) => {\n                // 根据选择的日期，请求相应日期的数据，并更新日期选择框与展示的结果\n                const getURLWithData = `/items?monthCategory=${year}-${month}&_sort=timestamp&_order=desc`;\n                const items = await axios.get(getURLWithData);\n                this.setState({\n                    items: flatternArr(items.data),\n                    currentDate: {year, month},\n                    isLoading: false\n                });\n            }),\n            // deleteItem: item => {\n            //     // this.state.items = {1: {}, 2:{}}\n            //     axios.delete(`/items/${item.id}`).then(() => {\n            //         delete this.state.items[item.id];\n            //         this.setState({\n            //             items: this.state.items\n            //         });\n            //     });\n            // },\n            // async版\n            deleteItem: withLoading(async item => {\n                // this.state.items = {1: {}, 2:{}}\n                const deleteItem = await axios.delete(`/items/${item.id}`);\n                delete this.state.items[item.id];\n                this.setState({\n                    items: this.state.items,\n                    isLoading: false\n                });\n                return deleteItem; // 如果不需要可不返回\n            }),\n            getEditData: withLoading(async id => {\n                const {items, categories} = this.state;\n                // 在编辑页可修改地址栏的id进行切换条目，需要先判断id是否存在\n                let promiseArr = [];\n                if (Object.keys(categories).length === 0) {\n                    promiseArr.push(axios.get('/categories'));\n                }\n                const itemAlreadyFeched = (Object.keys(items).indexOf(id) > -1);\n                if (id && !itemAlreadyFeched) {\n                    promiseArr.push(axios.get(`/items/${id}`));\n                }\n                const [fetchedCategories, editItem] = await Promise.all(promiseArr);\n                const finalCategories = fetchedCategories ? flatternArr(fetchedCategories.data) : categories;\n                const finalItem = editItem ? editItem.data : items[id];\n                if (id) {\n                    this.setState({\n                        categories: finalCategories,\n                        isLoading: false,\n                        items: {...this.state.items, [id]: finalItem}\n                    });\n                } else {\n                    this.setState({\n                        categories: finalCategories,\n                        isLoading: false\n                    });\n                }\n                return {\n                    categories: finalCategories,\n                    editItem: finalItem\n                };\n            }),\n            createItem: withLoading(async (data, categoryId) => {\n                const newId = ID();\n                const parsedDate = parseToYearAndMonth(data.date);\n                data.monthCategory = `${parsedDate.year}-${parsedDate.month}`;\n                data.timestamp = new Date(data.date).getTime();\n                const newItem = await axios.post('/items', {...data, id: newId, cid: categoryId});\n                this.setState({\n                    items: {...this.state.items, [newId]: newItem},\n                    isLoading: false\n                });\n                return newItem.data;\n            }),\n            updateItem: withLoading(async (item, updatedCategoryId) => {\n                const updatedData = {\n                    ...item,\n                    cid: updatedCategoryId,\n                    timestamp: new Date(item.date).getTime()\n                };\n                const modifedItem = await axios.put(`/items/${item.id}`, updatedData);\n                this.setState({\n                    items: {...this.state.items, [modifedItem.id]: modifedItem.data},\n                    isLoading: false\n                });\n                return modifedItem.data;\n            })\n        };\n    }\n    render() {\n        return (\n            <AppContext.Provider value={{\n                state: this.state,\n                actions: this.actions\n            }}>\n                <Router>\n                    <div className='App'>\n                        <ul>\n                            <Link to=\"/create\">create</Link>\n                        </ul>\n                        <div className=\"container pb-5\">\n                            <Route path=\"/\" exact component={Home}></Route>\n                            <Route path=\"/create\" component={Create}></Route>\n                            <Route path=\"/edit/:id\" component={Create}></Route>\n                        </div>\n                    </div>\n                </Router>\n            </AppContext.Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport axios from 'axios';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}